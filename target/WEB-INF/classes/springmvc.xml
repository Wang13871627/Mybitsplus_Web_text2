<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--开启映射器和适配器-->
    <mvc:annotation-driven></mvc:annotation-driven>
    <!--开启注解扫描-->
    <context:component-scan base-package="com.huayu.mybitsplus.web"></context:component-scan>
    <!--配置模板解析器-->
    <bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="characterEncoding" value="utf-8"></property>
        <!--&lt;!&ndash;prefix，用于指定template所在目录；&ndash;&gt;
        <property name="prefix" value="//"></property>-->
        <!--suffix，过滤请求，这里是处理所有以.html结尾的请求；-->
       <!-- <property name="suffix" value=".html"></property>-->
        <!--是否缓存页面，开发时设置为false，这样就可以在不重启服务器的情况下刷新页面即可查看修改效果；-->
        <property name="cacheable" value="false"></property>
        <!--templateMode，设置为html；-->
        <property name="templateMode" value="HTML"></property>
    </bean>

    <!--配置模板引擎-->
    <bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"></property>
    </bean>

    <!--视图解析器-->
    <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <!--解决中文乱码-->
        <property name="characterEncoding" value="utf-8"></property>
        <property name="templateEngine" ref="templateEngine"></property>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor"  class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!--开启Shiro的注解，实现对Controller的方法级权限检查(如@RequiresRoles,@RequiresPermissions),需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证-->
    <!--配置以下两个bean即可实现此功能 -->
    <!--Enable Shiro Annotations for Spring-configured beans. Only run after thelifecycleBeanProcessor has run -->
    <bean  class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
           depends-on="lifecycleBeanPostProcessor" >
        <property name="proxyTargetClass" value="true"/>
    </bean>
    <bean  class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>

    <bean class="com.huayu.mybitsplus.exception.InterException"></bean>

    <!--&lt;!&ndash; 配置SpringMVC的异常解析器 &ndash;&gt;
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                &lt;!&ndash; 发生授权异常时，跳到指定页 &ndash;&gt;
                <prop  key="org.apache.shiro.authz.UnauthorizedException">/layulview/login.html</prop>

                &lt;!&ndash;SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException&ndash;&gt;
                &lt;!&ndash;遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/error_fileupload.jsp页面&ndash;&gt;
                &lt;!&ndash; <propkey="org.springframework.web.multipart.MaxUploadSizeExceededException">WEB-INF/error_fileupload</prop>&ndash;&gt;
            </props>
        </property>
    </bean>-->

</beans>